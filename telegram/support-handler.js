// telegram/support-handler.js
import axios from 'axios';
import prisma from '../prisma/prisma';

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_CHAT_ID = 5505526221; // ID –∞–¥–º–∏–Ω–∞ –≤ Telegram

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export async function handleUserMessage(msg) {
  const chatId = msg.chat.id;
  const text = msg.text;
  const userId = chatId.toString();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (text?.startsWith('/')) {
    return; // –ö–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
  }

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.upsert({
      where: { telegramId: userId },
      update: {},
      create: {
        telegramId: userId,
        firstName: msg.from.first_name || 'User',
        lastName: msg.from.last_name || '',
        username: msg.from.username || null
      }
    });

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–µ–¥–∏–∞
    let mediaUrl = null;
    let mediaType = null;

    if (msg.photo) {
      const photo = msg.photo[msg.photo.length - 1]; // –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
      const fileId = photo.file_id;
      mediaUrl = await getFileUrl(fileId);
      mediaType = 'photo';
    } else if (msg.video) {
      const fileId = msg.video.file_id;
      mediaUrl = await getFileUrl(fileId);
      mediaType = 'video';
    } else if (msg.document) {
      const fileId = msg.document.file_id;
      mediaUrl = await getFileUrl(fileId);
      mediaType = 'document';
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ë–î
    const savedMessage = await prisma.supportMessage.create({
      data: {
        userId: userId,
        message: text || (msg.caption || ''),
        mediaUrl,
        mediaType,
        isFromAdmin: false,
        isRead: false
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
    await prisma.user.update({
      where: { telegramId: userId },
      data: { hasUnreadSupport: true }
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await sendMessage(chatId, 
      '‚úÖ Your message has been received! Our support team will respond shortly.'
    );

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
    await notifyAdmin(user, savedMessage);

  } catch (error) {
    console.error('Error handling user message:', error);
    await sendMessage(chatId, 
      '‚ùå Sorry, there was an error processing your message. Please try again.'
    );
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å URL —Ñ–∞–π–ª–∞ –∏–∑ Telegram
 */
async function getFileUrl(fileId) {
  try {
    const response = await axios.get(
      `https://api.telegram.org/bot${BOT_TOKEN}/getFile?file_id=${fileId}`
    );
    
    if (response.data.ok) {
      const filePath = response.data.result.file_path;
      return `https://api.telegram.org/file/bot${BOT_TOKEN}/${filePath}`;
    }
  } catch (error) {
    console.error('Error getting file URL:', error);
  }
  return null;
}

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 */
async function sendMessage(chatId, text, options = {}) {
  try {
    await axios.post(
      `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`,
      {
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML',
        ...options
      }
    );
  } catch (error) {
    console.error('Error sending message:', error);
  }
}

/**
 * –£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
 */
async function notifyAdmin(user, message) {
  if (!ADMIN_CHAT_ID) return;

  try {
    const userName = `${user.firstName} ${user.lastName}`.trim();
    const username = user.username ? `@${user.username}` : 'No username';
    
    let notificationText = `üîî <b>New Support Message</b>\n\n`;
    notificationText += `üë§ From: ${userName} (${username})\n`;
    notificationText += `üÜî User ID: ${user.telegramId}\n`;
    notificationText += `üìù Message: ${message.message || '[Media]'}\n\n`;
    notificationText += `üîó View in admin panel: ${process.env.FRONTEND_URL}/admin/support`;

    if (message.mediaUrl && message.mediaType) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ —Å –ø–æ–¥–ø–∏—Å—å—é
      const methodMap = {
        photo: 'sendPhoto',
        video: 'sendVideo',
        document: 'sendDocument'
      };

      const method = methodMap[message.mediaType];
      const mediaField = message.mediaType === 'photo' ? 'photo' : 
                         message.mediaType === 'video' ? 'video' : 'document';

      await axios.post(
        `https://api.telegram.org/bot${BOT_TOKEN}/${method}`,
        {
          chat_id: ADMIN_CHAT_ID,
          [mediaField]: message.mediaUrl,
          caption: notificationText,
          parse_mode: 'HTML'
        }
      );
    } else {
      await sendMessage(ADMIN_CHAT_ID, notificationText);
    }
  } catch (error) {
    console.error('Error notifying admin:', error);
  }
}

/**
 * –ö–æ–º–∞–Ω–¥–∞ /support –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export async function handleSupportCommand(msg) {
  const chatId = msg.chat.id;
  
  const helpText = `
üí¨ <b>Support</b>

You can send any message or media to this chat, and our support team will respond.

üìù Text messages
üì∑ Photos
üé• Videos
üìÑ Documents

We typically respond within 24 hours.
  `.trim();

  await sendMessage(chatId, helpText);
}

// –î–æ–±–∞–≤—å—Ç–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π bot handler:
/*
bot.on('message', async (msg) => {
  if (msg.text === '/support') {
    await handleSupportCommand(msg);
  } else if (!msg.text?.startsWith('/')) {
    await handleUserMessage(msg);
  }
});
*/